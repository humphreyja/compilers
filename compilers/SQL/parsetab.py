
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '235BA137A347B96E1CDA4EAF8C24A29D'
    
_lr_action_items = {'LIMIT':([16,17,22,26,27,28,29,30,32,35,48,49,50,51,52,53,54,55,56,58,],[-14,-12,-18,-17,-23,-31,-30,-13,-32,46,-15,-21,-22,-26,-25,-28,-24,-27,-29,-16,]),'SELECT':([0,],[3,]),'DIRECTION':([36,],[47,]),'LE':([28,29,31,32,],[-31,-30,44,-32,]),'RPAREN':([14,15,],[20,21,]),'SEMI':([2,16,17,22,26,27,28,29,30,32,35,45,48,49,50,51,52,53,54,55,56,57,58,],[4,-14,-12,-18,-17,-23,-31,-30,-13,-32,-20,-2,-15,-21,-22,-26,-25,-28,-24,-27,-29,-19,-16,]),'NE':([28,29,31,32,],[-31,-30,40,-32,]),'LT':([28,29,31,32,],[-31,-30,43,-32,]),'COMMA':([6,7,8,9,18,19,20,21,33,34,],[12,-4,-5,-10,-3,-11,-7,-6,-9,-8,]),'$end':([1,4,],[0,-1,]),'COUNT':([3,12,],[5,5,]),'GT':([28,29,31,32,],[-31,-30,39,-32,]),'ORDER_BY':([16,17,22,26,27,28,29,30,32,49,50,51,52,53,54,55,56,],[-14,-12,-18,36,-23,-31,-30,-13,-32,-21,-22,-26,-25,-28,-24,-27,-29,]),'STRING':([23,37,38,39,40,41,42,43,44,],[28,28,28,28,28,28,28,28,28,]),'EQUALS':([28,29,31,32,],[-31,-30,42,-32,]),'GE':([28,29,31,32,],[-31,-30,41,-32,]),'LPAREN':([5,],[10,]),'WHERE':([16,17,],[23,-12,]),'ID':([3,10,11,12,13,23,24,25,36,37,38,39,40,41,42,43,44,47,],[9,15,17,9,19,32,33,34,48,32,32,32,32,32,32,32,32,58,]),'AND':([27,28,29,30,32,49,50,51,52,53,54,55,56,],[-23,-31,-30,37,-32,-21,-22,-26,-25,-28,-24,-27,-29,]),'FROM':([6,7,8,9,18,19,20,21,33,34,],[11,-4,-5,-10,-3,-11,-7,-6,-9,-8,]),'INT':([23,37,38,39,40,41,42,43,44,46,],[29,29,29,29,29,29,29,29,29,57,]),'AS':([9,20,21,],[13,24,25,]),'WILD':([3,10,12,],[8,14,8,]),'OR':([27,28,29,30,32,49,50,51,52,53,54,55,56,],[-23,-31,-30,38,-32,-21,-22,-26,-25,-28,-24,-27,-29,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'order_by_opts':([26,],[35,]),'equality':([23,37,38,],[27,49,50,]),'group_by_opts':([22,],[26,]),'fields':([3,],[6,]),'equalities':([23,],[30,]),'limit_opts':([35,],[45,]),'value':([23,37,38,39,40,41,42,43,44,],[31,31,31,51,52,53,54,55,56,]),'field':([3,12,],[7,18,]),'program':([0,],[1,]),'where_opts':([16,],[22,]),'statement':([0,],[2,]),'table':([11,],[16,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement SEMI','program',2,'p_program','sqlparse.py',8),
  ('statement -> SELECT fields FROM table where_opts group_by_opts order_by_opts limit_opts','statement',8,'p_statement_select','sqlparse.py',12),
  ('fields -> fields COMMA field','fields',3,'p_fields_separate_fields','sqlparse.py',16),
  ('fields -> field','fields',1,'p_fields_separate_fields','sqlparse.py',17),
  ('field -> WILD','field',1,'p_field_wild','sqlparse.py',28),
  ('field -> COUNT LPAREN ID RPAREN','field',4,'p_field_count','sqlparse.py',32),
  ('field -> COUNT LPAREN WILD RPAREN','field',4,'p_field_count','sqlparse.py',33),
  ('field -> COUNT LPAREN ID RPAREN AS ID','field',6,'p_field_count','sqlparse.py',34),
  ('field -> COUNT LPAREN WILD RPAREN AS ID','field',6,'p_field_count','sqlparse.py',35),
  ('field -> ID','field',1,'p_field_column','sqlparse.py',42),
  ('field -> ID AS ID','field',3,'p_field_column','sqlparse.py',43),
  ('table -> ID','table',1,'p_table','sqlparse.py',50),
  ('where_opts -> WHERE equalities','where_opts',2,'p_where_opts','sqlparse.py',54),
  ('where_opts -> <empty>','where_opts',0,'p_where_opts','sqlparse.py',55),
  ('order_by_opts -> ORDER_BY ID','order_by_opts',2,'p_order_by_opts','sqlparse.py',62),
  ('order_by_opts -> ORDER_BY DIRECTION ID','order_by_opts',3,'p_order_by_opts','sqlparse.py',63),
  ('order_by_opts -> <empty>','order_by_opts',0,'p_order_by_opts','sqlparse.py',64),
  ('group_by_opts -> <empty>','group_by_opts',0,'p_group_by_opts','sqlparse.py',76),
  ('limit_opts -> LIMIT INT','limit_opts',2,'p_limit_opts','sqlparse.py',83),
  ('limit_opts -> <empty>','limit_opts',0,'p_limit_opts','sqlparse.py',84),
  ('equalities -> equalities AND equality','equalities',3,'p_equalities','sqlparse.py',91),
  ('equalities -> equalities OR equality','equalities',3,'p_equalities','sqlparse.py',92),
  ('equalities -> equality','equalities',1,'p_equalities','sqlparse.py',93),
  ('equality -> value EQUALS value','equality',3,'p_equality_equals','sqlparse.py',104),
  ('equality -> value NE value','equality',3,'p_equality_not_equals','sqlparse.py',108),
  ('equality -> value GT value','equality',3,'p_equality_greater','sqlparse.py',112),
  ('equality -> value LT value','equality',3,'p_equality_less','sqlparse.py',116),
  ('equality -> value GE value','equality',3,'p_equality_greater_equals','sqlparse.py',120),
  ('equality -> value LE value','equality',3,'p_equality_less_equals','sqlparse.py',124),
  ('value -> INT','value',1,'p_value_int','sqlparse.py',128),
  ('value -> STRING','value',1,'p_value_str','sqlparse.py',132),
  ('value -> ID','value',1,'p_value_id','sqlparse.py',136),
]
